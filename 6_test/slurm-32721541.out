
The following have been reloaded with a version change:
  1) python/3.11.5 => python/3.10.13

/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (9523, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (8116, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (6551, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (9517, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (9368, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (9172, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
data.shape (10003, 4)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224308
Size:  4448
Labels: 
label
2    3596
1     644
0     208
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid196627
Size:  3002
Labels: 
label
0    1182
1    1077
2     743
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid511145
Size:  4316
Labels: 
label
0    2098
1    1726
2     492
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid85962
Size:  1566
Labels: 
label
1    744
2    708
0    114
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid297246
Size:  3094
Labels: 
label
2    2087
1     877
0     130
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid169963
Size:  3047
Labels: 
label
2    1844
1    1031
0     172
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid272634
Size:  730
Labels: 
label
2    358
1    246
0    126
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid298386
Size:  5569
Labels: 
label
2    4806
1     676
0      87
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid176299
Size:  4574
Labels: 
label
2    4560
1      14
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224326
Size:  837
Labels: 
label
2    817
1     20
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid224911
Size:  7136
Labels: 
label
2    7119
1      15
0       2
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid208964
Size:  63334
Labels: 
label
2    63264
1       67
0        3
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid214092
Size:  4034
Labels: 
label
2    4028
1       6
Name: count, dtype: int64
--------------------------------------- 

resample done
scale done
same_length done
combine done
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:175: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: make_label_pair(operon_pair_list, row[0].split(',')), axis=1)
/lustre06/project/6003138/rezvank/OpDetect/6_test/../4_data_process/integrate.py:182: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  labels.apply(lambda row: gene_names.extend(row[0].split(',')), axis=1)
Done with  txid6239
Size:  44760
Labels: 
label
2    43520
1     1184
0       56
Name: count, dtype: int64
--------------------------------------- 

